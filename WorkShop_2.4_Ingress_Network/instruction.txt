Instruction for Workshop 2.4 Ingress Network:
Note: This instruction will start lab for kubernetes for ingress workshop
--------------------------------------------------------------------------
0. Enable addon for ingress by command:
# Create Namespace and SA 
kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.5_Kubernetes_RealWorld/kubernetes-ingress/deployments/common/ns-and-sa.yaml

# Create Default Secret for 404 Return
kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.5_Kubernetes_RealWorld/kubernetes-ingress/deployments/common/default-server-secret.yaml

# Add optional for configure nginx customization (Ref: https://github.com/nginxinc/kubernetes-ingress/tree/master/examples/customization)
kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.5_Kubernetes_RealWorld/kubernetes-ingress/deployments/common/nginx-config.yaml

# Configure rbac
kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.5_Kubernetes_RealWorld/kubernetes-ingress/deployments/rbac/rbac.yaml

# Create Daemon Setup
kubectl apply -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.5_Kubernetes_RealWorld/kubernetes-ingress/deployments/daemon-set/nginx-ingress.yaml

# Check ingress running
watch kubectl get pods --namespace=nginx-ingress

# Test access via browser (Expect: 404 Not Found)
http://<Public IP>

1. Create Service/Pods/Deployment for webtest1 and webtest2 by command:
	kubectl create -f webtest_deploy.yml 	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/webtest_deploy.yml )
	kubectl create -f webtest_deploy2.yml 	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/webtest_deploy2.yml )

2. View service for connection by command:
	kubectl get svc -o wide

	-------------------------------
	Example Result:
	-------------------------------
	NAME         CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE       SELECTOR
kubernetes   10.0.0.1     <none>        443/TCP   17d       <none>
webtest1     10.0.0.147   <none>        80/TCP    14s       environment=development,module=WebServer,name=webtest1,owner=Praparn
_L,version=1.0
webtest2     10.0.0.222   <none>        80/TCP    11s       environment=development,module=WebServer,name=webtest2,owner=Praparn
_L,version=1.0
	-------------------------------

	
3. Try to connect for each service via curl by command:
	kubectl run curl --image=radial/busyboxplus:curl -i --tty
	curl http://<ip of webtest1> or curl http://webtest1
	curl http://<ip of webtest2> or curl http://webtest2

4. Create ingress for access by command:
	kubectl create -f ingress_webtest.yml 	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/ingress_webtest.yml )
	kubectl get ing -o wide
	kubectl describe ing/ingresswebtest

5. Check Your Public IP Address by command:
	curl https://ifconfig.co/

6. Add Hosts (/etc/hosts) or (c:\windows\system32\driver\etc\hosts) with minikube ip by command:
	For Windows:
		<Public IP> webtest1.kuberneteslabthailand.com webtest2.kuberneteslabthailand.com

	For Mac:
	echo "<Public IP> webtest1.kuberneteslabthailand.com webtest2.kuberneteslabthailand.com" | sudo tee -a /private/etc/hosts

	*Remark for MAC: for case you don't prefer for add hosts please kindly use curl instead:
	curl http://<Public IP> -H 'Host:webtest1.kuberneteslabthailand.com'
	curl http://<Public IP> -H 'Host:webtest2.kuberneteslabthailand.com'

7. Test access website by command or browser:
	http://webtest1.kuberneteslabthailand.com
	http://webtest2.kuberneteslabthailand.com

8. Delete Existing Ingress by command:
	kubectl delete -f ingress_webtest.yml	(In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/ingress_webtest.yml)

9. Create TLS Secret by command:
	kubectl create -f ingress_webtest_tls_secret_webtest1.yml 	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/ingress_webtest_tls_secret_webtest1.yml )
	kubectl create -f ingress_webtest_tls_secret_webtest2.yml 	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/ingress_webtest_tls_secret_webtest2.yml )

10. Create ingress for TLS by command:
	kubectl create -f ingress_webtest_tls.yml 	(In case run via github: kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/ingress_webtest_tls.yml )
	kubectl get ing/ingresswebtesttls -o wide
	kubectl describe ing/ingresswebtesttls

11. Test access website by browser:
	https://webtest1.kuberneteslabthailand.com
	https://webtest2.kuberneteslabthailand.com

	*Remark for MAC: for case you don't prefer for add hosts please kindly use curl instead:
	curl https://<Public IP> -k -H 'Host:webtest1.kuberneteslabthailand.com'
	curl https://<Public IP> -k -H 'Host:webtest2.kuberneteslabthailand.com'


12. Clean Up Lab:
	kubectl delete -f ingress_webtest_tls.yml	 (In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/ingress_webtest_tls.yml)
	kubectl delete -f ingress_webtest_tls_secret_webtest1.yml	(In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/ingress_webtest_tls_secret_webtest1.yml)
	kubectl delete -f ingress_webtest_tls_secret_webtest2.yml	(In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/ingress_webtest_tls_secret_webtest2.yml)
	kubectl delete -f webtest_deploy.yml	(In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/webtest_deploy.yml)
	kubectl delete -f webtest_deploy2.yml	(In case run via github: kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.4_Ingress_Network/webtest_deploy2.yml)
	kubectl delete deployment/curl