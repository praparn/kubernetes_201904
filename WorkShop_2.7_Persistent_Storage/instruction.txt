Instruction for Workshop 2.7 Kubernetes for Stateful Application:
Note: This instruction will start lab for kubernetes for real workshop:
====================================================
Lab Description:
Machine name		            			Roles:						IP Address: (Private)		IP Address: (Public)
Training_DockerZerotoHero_StudentGX_1	    Master						10.0.X.X					X.X.X.X					
Training_DockerZerotoHero_StudentGX_2       NodePort					10.0.X.X					X.X.X.X
Training_DockerZerotoHero_StudentGX_3 		NodePort					10.0.X.X					X.X.X.X
===================================================

===================================================
Part 1: Initial NFS ShareFile on Ubuntu
===================================================
1. (All Node) Install Component for NFS ShareFile by command:
sudo apt-get install -y nfs-kernel-server nfs-common

2. (Master) Create new directory for share and change permission for allow all operate by command:
sudo mkdir -p /var/nfsshare
sudo chmod 777 /var/nfsshare
sudo chown nobody:nogroup /var/nfsshare


3. (Master) Edit permission for NFS on /etc/exports:
sudo vi /etc/exports ==> Add new line below
---------------------------------------------------
/var/nfsshare    10.0.0.0/16(rw,sync,no_subtree_check,no_root_squash)
---------------------------------------------------

4. (Master) Update NFS table for announce share and start nfs server by command:
sudo exportfs -a
sudo service nfs-kernel-server start

5. (All Node) Test access share file:
sudo mkdir -p /mnt/nfs_share
sudo mount -t nfs <Private IP of Master Node>:/var/nfsshare /mnt/nfs_share
df -kh

6. (All node) Test create file and check  by command:
(Master): touch /mnt/nfs_share/test_ms
(Worker): touch /mnt/nfs_share/test_1
(Worker): touch /mnt/nfs_share/test_2
(any node): ls -lh /mnt/nfs_share
(any node): rm /mnt/nfs_share/*

===================================================
Part 2: Integrate with Persistency Volume (PV),  and Persistency Volume Claim (PVC)
===================================================
1. (Master) Check workshop on Cloud
cd ~/kubernetes_20181124/WorkShop_2.7_Persistent_Storage/

2. (Master) Copy sourcecode to NFS/Create Storage Class/ Volume (PV/PVC)/Deployment by command:
cp mainlite.py /mnt/nfs_share/ (In case run via github : curl https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.7_Persistent_Storage/mainlite.py > /mnt/nfs_share/mainlite.py)

3. (Master) Edit file "nfs_pv.yml" and change ip address of NFS to <Private IP Address of master>:

vi nfs_pv.yml (Edit IP Address to Your Private IP Address of Master)
kubectl create -f nfs_pv.yml

4. (Master) Check status of PV by command:
kubectl get pv
kubectl describe pv/nfs-share-pv

5. (Master) Create PVC for Claim Storage by command: 
kubectl create -f nfs_pvc.yml   (In case run via github : kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.7_Persistent_Storage/nfs_pvc.yml)

6. (Master) Check status of PVC by command:
kubectl get pvc
kubectl describe pvc/nfs-share-pvc

7. (Master) Create Deployment and Persistency Volume Claim (PVC) by command:
kubectl create -f nfs_webtest_deploy.yml    (In case run via github : kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.7_Persistent_Storage/nfs_webtest_deploy.yml)
kubectl create -f nfs_webtest_svc.yml   (In case run via github : kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.7_Persistent_Storage/nfs_webtest_svc.yml)
kubectl get deployment
kubectl get svc
kubectl get pods -o wide

8. (Master) Access to pods by kubectl or docker exec and check mount volume by command:
kubectl exec -it <pods name> sh
ls

9. (Master:inside pods) Check volume from NFS inside container and test create file by command:
df -kh ==> check /usr/src/app 
exit

10. (Master) Access to all pods for check/create file by command:
    kubectl get pods -o wide
    
    kubectl exec -it <pods name> sh (Pods: 1)
    touch /usr/src/app/test-Pods1
    ls -lh /usr/src/app
    exit

    kubectl exec -it <pods name> sh (Pods: 2)
    touch /usr/src/app/test-Pods2
    ls -lh /usr/src/app
    exit

    kubectl exec -it <pods name> sh (Pods: 3)
    touch /usr/src/app/test-Pods3
    ls -lh /usr/src/app
    rm /usr/src/app/test-Pods*
    exit

11. (Master) Clean Up file and deployment by command:
    kubectl delete -f nfs_webtest_deploy.yml    (In case run via github : kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.7_Persistent_Storage/nfs_webtest_deploy.yml)
    kubectl delete -f nfs_webtest_svc.yml   (In case run via github : kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.7_Persistent_Storage/nfs_webtest_svc.yml)
    kubectl delete -f nfs_pvc.yml   (In case run via github : kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.7_Persistent_Storage/nfs_pvc.yml)
    kubectl delete -f nfs_pv.yml    (In case run via github : kubectl delete -f https://raw.githubusercontent.com/praparn/kubernetes_20181124/master/WorkShop_2.7_Persistent_Storage/nfs_pv.yml)